var a : Int
var i = 0
var b = 0

fn fiboR(n : Int) : Int
	if n eq 0 or n eq 1 :
		return 1
	else:
		return fiboR(n - 2) + fiboR(n - 1)

fn fibo_w(n : Int) : Int
	var actual : Int
	var prev = 1
	var prevPrevVal = -1

	while b lt n:
		actual = prev + prevPrevVal
		prev = prevPrevVal
		prevPrevVal = actual
		print actual
		print ','
		b = b + 1

	return actual


fn main() : Int
	scan a

	while i lt a :
		if fiboR(a) not eq 0:
			print ','
			print ' '
		print fibo_w(a)
		i = i + 1

	print fibo_w(a)

	return 0