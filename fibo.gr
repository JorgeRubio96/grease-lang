fn fiboR(n : Int) : Int
  if n eq 0 or n eq 1 :
    return 1
  else:
    return fiboR(n - 2) + fiboR(n - 1)

fn fibo_w(n : Int) : Int
  var actual : Int
  var prev = 0
  var prevPrevVal = 1
  var b = 0

  while b lt n:
    actual = prev + prevPrevVal
    prev = prevPrevVal
    prevPrevVal = actual
    b = b + 1

  return actual


fn main() : Int
  var a : Int
  scan a

  print fibo_w(a)
  print '\n'

  return 0
